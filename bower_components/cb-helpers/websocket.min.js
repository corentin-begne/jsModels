var WebsocketHelper;!function(){"use strict";WebsocketHelper=function(e){extendSingleton(WebsocketHelper),this.token,this.events={onopen:this.connected.bind(this),onerror:this.error.bind(this),onclose:this.disconnected.bind(this),onmessage:this.recv.bind(this)},this.cbConnected,this.userEvents={},e(this)},WebsocketHelper.getInstance=function(e){return isDefined(e)?void getSingleton(WebsocketHelper,e):getSingleton(WebsocketHelper)},WebsocketHelper.prototype.init=function(e){function t(){isDefined(n.socket)&&n.socket.close()}function o(e,t){n.socket[e]=t}var n=this;$.each(e,o),$(window).unbind("beforeunload"),$(window).bind("beforeunload",t)},WebsocketHelper.prototype.addEvents=function(e){$.each(e,this.addEvent.bind(this))},WebsocketHelper.prototype.addEvent=function(e,t){this.userEvents[e]=t},WebsocketHelper.prototype.send=function(e,t){t=ifNull(t,{}),t.token=this.token,this.socket.send(JSON.stringify({type:e,data:t}))},WebsocketHelper.prototype.connect=function(e,t,o){console.log("connecting to socket server ..."),this.cbConnected=o;try{this.socket=new WebSocket(e+(isDefined(t)?"?"+$.param(t):"")),this.init(this.events)}catch(n){console.error(n)}},WebsocketHelper.prototype.recv=function(e){var t=ifNull(e.data,$.parseJSON(e.data),{});return isDefined(this.userEvents[t.type])?void this.userEvents[t.type](t.data):(console.error("socket event received but not defined",t),!1)},WebsocketHelper.prototype.connected=function(e){console.log("connected to socket server",e),isDefined(this.cbConnected)&&this.cbConnected(e)},WebsocketHelper.prototype.disconnected=function(){console.error("disconnected from socket server")},WebsocketHelper.prototype.error=function(){console.error("can't connect to socket server")}}();