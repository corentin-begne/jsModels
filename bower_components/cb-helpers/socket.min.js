var SocketHelper;!function(){"use strict";SocketHelper=function(e){function n(n){window.io=n,isDefined(e)&&e(t)}var t=this;extendSingleton(SocketHelper),this.token,require(["/bower_components/socket.io-1.4.5/index.js"],n),this.events={auth:{name:"auth.acknowledge",cb:this.connected.bind(this)},connectError:{name:"connect_error",cb:this.connectError.bind(this)},disconnected:{name:"disconnect",cb:this.disconnected.bind(this)}}},SocketHelper.getInstance=function(e){return isDefined(e)?void getSingleton(SocketHelper,e):getSingleton(SocketHelper)},SocketHelper.prototype.init=function(e){function n(e){isDefined(o._socket)&&o.socket.disconnect()}function t(e,n){o.socket.on(n.name,n.cb)}var o=this;isDefined(this.socket)&&isDefined(e)&&$.each(e,t),$(window).unbind("beforeunload"),$(window).bind("beforeunload",n)},SocketHelper.prototype.send=function(e,n){n=isDefined(n)?n:{},n.token=this.token,this.socket.emit(e,n)},SocketHelper.prototype.connect=function(e,n,t){console.log("connecting to socket server ..."),this.socket=io("http://"+n+":"+t,{reconnection:!1,autoConnect:!1,query:$.param(e)}),this.init(this.events),this.socket.connect()},SocketHelper.prototype.connected=function(e){console.log("connected to socket server",e)},SocketHelper.prototype.disconnected=function(){console.error("disconnected from socket server")},SocketHelper.prototype.connectError=function(){console.error("can't connect to socket server")}}();